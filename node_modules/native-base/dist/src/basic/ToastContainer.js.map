{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["ToastContainer","props","state","modalVisible","fadeAnim","Value","position","opacity","width","elevation","paddingHorizontal","OS","top","getTop","undefined","bottom","buttonText","trim","length","config","setState","text","getButtonText","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","onClose","duration","setTimeout","timing","toValue","start","getToastStyle","closeToast","toastInstance","_root","showToast","propTypes","oneOfType","object","number","array","StyledToastContainer"],"mappings":"u2BAAA,4B;AACA,qC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mE;;AAEMA,c;AACJ,wBAAYC,KAAZ,CAAmB;AACXA,KADW;AAEjB,MAAKC,KAAL,CAAa;AACXC,aAAc,KADH;AAEXC,SAAU,GAAI,uBAASC,KAAb,CAAmB,CAAnB,CAFC,CAAb,CAFiB;;AAMlB,C;;;;;AAKe;AACd,MAAO;AACLC,SAAU,UADL;AAELC,QAAS,KAAKL,KAAL,CAAWE,QAFf;AAGLI,MAAO,MAHF;AAILC,UAAW,CAJN;AAKLC,kBAAmB,sBAASC,EAAT,GAAgB,KAAhB,CAAwB,EAAxB,CAA6B,CAL3C;AAMLC,IAAK,KAAKV,KAAL,CAAWI,QAAX,GAAwB,KAAxB,CAAgC,KAAKO,MAAL,EAAhC,CAAgDC,SANhD;AAOLC,OAAQ,KAAKb,KAAL,CAAWI,QAAX,GAAwB,QAAxB,CAAmC,KAAKO,MAAL,EAAnC,CAAmDC,SAPtD,CAAP;;AASD,C;AACQ;AACP,GAAI,sBAASH,EAAT,GAAgB,KAApB,CAA2B;AACzB,MAAO,GAAP;AACD,CAFD,IAEO;AACL,MAAO,EAAP;AACD;AACF,C;AACaK,U,CAAY;AACxB,GAAIA,UAAJ,CAAgB;AACd,GAAIA,WAAWC,IAAX,GAAkBC,MAAlB,GAA6B,CAAjC,CAAoC;AAClC,MAAOJ,UAAP;AACD,CAFD,IAEO,OAAOE,WAAP;AACR;AACD,MAAOF,UAAP;AACD,C;AACqB,oBAAVK,OAAU,MAAVA,MAAU;AACpB,KAAKC,QAAL,CAAc;AACZjB,aAAc,IADF;AAEZkB,KAAMF,OAAOE,IAFD;AAGZL,WAAY,KAAKM,aAAL,CAAmBH,OAAOH,UAA1B,CAHA;AAIZO,KAAMJ,OAAOI,IAJD;AAKZjB,SAAUa,OAAOb,QAAP,CAAkBa,OAAOb,QAAzB,CAAoC,QALlC;AAMZkB,sBAAuBL,OAAOK,qBANlB;AAOZC,MAAON,OAAOM,KAPF;AAQZC,gBAAiBP,OAAOO,eARZ;AASZC,YAAaR,OAAOQ,WATR;AAUZC,UAAWT,OAAOS,SAVN;AAWZC,QAASV,OAAOU,OAXJ,CAAd;;AAaA,GAAIV,OAAOW,QAAP,CAAkB,CAAtB,CAAyB;AACvBC,WAAW,UAAM;AACf,sBAASC,MAAT,CAAgB,OAAK9B,KAAL,CAAWE,QAA3B,CAAqC;AACnC6B,QAAS,CAD0B;AAEnCH,SAAU,GAFyB,CAArC;AAGGI,KAHH;AAIAH,WAAW,UAAM;AACf,OAAKX,QAAL,CAAc;AACZjB,aAAc,KADF,CAAd;;AAGD,CAJD,CAIG,GAJH;AAKD,CAVD,CAUGgB,OAAOW,QAVV;AAWD,CAZD,IAYO;AACLC,WAAW,UAAM;AACf,sBAASC,MAAT,CAAgB,OAAK9B,KAAL,CAAWE,QAA3B,CAAqC;AACnC6B,QAAS,CAD0B;AAEnCH,SAAU,GAFyB,CAArC;AAGGI,KAHH;AAIAH,WAAW,UAAM;AACf,OAAKX,QAAL,CAAc;AACZjB,aAAc,KADF,CAAd;;AAGD,CAJD,CAIG,GAJH;AAKD,CAVD,CAUG,IAVH;AAWD;AACD,sBAAS6B,MAAT,CAAgB,KAAK9B,KAAL,CAAWE,QAA3B,CAAqC;AACnC6B,QAAS,CAD0B;AAEnCH,SAAU,GAFyB,CAArC;AAGGI,KAHH;AAID,C;AACY;AACHL,OADG,CACS,KAAK3B,KADd,CACH2B,OADG;;AAGX,GAAIA,SAAW,MAAOA,QAAP,GAAmB,UAAlC,CAA8C;AAC5CA;AACD;AACD,sBAASG,MAAT,CAAgB,KAAK9B,KAAL,CAAWE,QAA3B,CAAqC;AACnC6B,QAAS,CAD0B;AAEnCH,SAAU,GAFyB,CAArC;AAGGI,KAHH;AAIAH,WAAW,UAAM;AACf,OAAKX,QAAL,CAAc;AACZjB,aAAc,KADF,CAAd;;AAGD,CAJD,CAIG,GAJH;AAKD,C;AACQ;AACP,GAAI,KAAKD,KAAL,CAAWC,YAAf,CAA6B;AAC3B;AACE,oDAAU,IAAV,EAAe,MAAO,KAAKgC,aAAL,EAAtB;AACE;AACE,MAAO,KAAKjC,KAAL,CAAWuB,KADpB;AAEE,OAAQ,KAAKvB,KAAL,CAAWqB,IAAX,EAAmB,QAAnB,CAA8B,IAA9B,CAAqC,KAF/C;AAGE,QAAS,KAAKrB,KAAL,CAAWqB,IAAX,EAAmB,SAAnB,CAA+B,IAA/B,CAAsC,KAHjD;AAIE,QAAS,KAAKrB,KAAL,CAAWqB,IAAX,EAAmB,SAAnB,CAA+B,IAA/B,CAAsC,KAJjD;;AAME,0CAAM,MAAO,KAAKrB,KAAL,CAAW0B,SAAxB,kDAAoC,KAAK1B,KAAL,CAAWmB,IAA/C,CANF;AAOG,KAAKnB,KAAL,CAAWc,UAAX;AACC;AACE,MAAO,KAAKd,KAAL,CAAWyB,WADpB;AAEE,QAAS,yBAAM,QAAKS,UAAL,EAAN,EAFX;;AAIE,0CAAM,MAAO,KAAKlC,KAAL,CAAWwB,eAAxB;AACG,KAAKxB,KAAL,CAAWc,UADd,CAJF,CARJ,CADF,CADF;;;;;;;AAsBD,CAvBD,IAuBO,OAAO,KAAP;AACR,C,0CAlH0B,IAAVG,OAAU,oCACzB,KAAKkB,aAAL,CAAmBC,KAAnB,CAAyBC,SAAzB,CAAmC,CAAEpB,aAAF,CAAnC,EACD,C;;;AAmHHnB,eAAewC,SAAf;;AAEEf,MAAO,oBAAUgB,SAAV,CAAoB;AACzB,oBAAUC,MADe;AAEzB,oBAAUC,MAFe;AAGzB,oBAAUC,KAHe,CAApB,CAFT;;;;AASA,GAAMC,sBAAuB;AAC3B,2BAD2B;AAE3B,EAF2B;;AAI3B7C,cAJ2B,CAA7B,C;;AAMiCA,c,CAAxB6C,oB","file":"ToastContainer.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, Modal, Platform, Animated, ViewPropTypes } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport { Text } from \"./Text\";\nimport { Button } from \"./Button\";\nimport { ViewNB } from \"./View\";\nimport { Toast } from \"./Toast\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass ToastContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      fadeAnim: new Animated.Value(0)\n    };\n  }\n  static toastInstance;\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  getToastStyle() {\n    return {\n      position: \"absolute\",\n      opacity: this.state.fadeAnim,\n      width: \"100%\",\n      elevation: 9,\n      paddingHorizontal: Platform.OS === \"ios\" ? 20 : 0,\n      top: this.state.position === \"top\" ? this.getTop() : undefined,\n      bottom: this.state.position === \"bottom\" ? this.getTop() : undefined\n    };\n  }\n  getTop() {\n    if (Platform.OS === \"ios\") {\n      return 30;\n    } else {\n      return 0;\n    }\n  }\n  getButtonText(buttonText) {\n    if (buttonText) {\n      if (buttonText.trim().length === 0) {\n        return undefined;\n      } else return buttonText;\n    }\n    return undefined;\n  }\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: this.getButtonText(config.buttonText),\n      type: config.type,\n      position: config.position ? config.position : \"bottom\",\n      supportedOrientations: config.supportedOrientations,\n      style: config.style,\n      buttonTextStyle: config.buttonTextStyle,\n      buttonStyle: config.buttonStyle,\n      textStyle: config.textStyle,\n      onClose: config.onClose\n    });\n    if (config.duration > 0) {\n      setTimeout(() => {\n        Animated.timing(this.state.fadeAnim, {\n          toValue: 0,\n          duration: 200\n        }).start();\n        setTimeout(() => {\n          this.setState({\n            modalVisible: false\n          });\n        }, 500);\n      }, config.duration);\n    } else {\n      setTimeout(() => {\n        Animated.timing(this.state.fadeAnim, {\n          toValue: 0,\n          duration: 200\n        }).start();\n        setTimeout(() => {\n          this.setState({\n            modalVisible: false\n          });\n        }, 500);\n      }, 1500);\n    }\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1,\n      duration: 200\n    }).start();\n  }\n  closeToast() {\n    const { onClose } = this.state;\n\n    if (onClose && typeof onClose === \"function\") {\n      onClose();\n    }\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 0,\n      duration: 200\n    }).start();\n    setTimeout(() => {\n      this.setState({\n        modalVisible: false\n      });\n    }, 500);\n  }\n  render() {\n    if (this.state.modalVisible) {\n      return (\n        <Animated.View style={this.getToastStyle()}>\n          <Toast\n            style={this.state.style}\n            danger={this.state.type == \"danger\" ? true : false}\n            success={this.state.type == \"success\" ? true : false}\n            warning={this.state.type == \"warning\" ? true : false}\n          >\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\n            {this.state.buttonText && (\n              <Button\n                style={this.state.buttonStyle}\n                onPress={() => this.closeToast()}\n              >\n                <Text style={this.state.buttonTextStyle}>\n                  {this.state.buttonText}\n                </Text>\n              </Button>\n            )}\n          </Toast>\n        </Animated.View>\n      );\n    } else return null;\n  }\n}\n\nToastContainer.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nconst StyledToastContainer = connectStyle(\n  \"NativeBase.ToastContainer\",\n  {},\n  mapPropsToStyleNames\n)(ToastContainer);\n\nexport { StyledToastContainer as ToastContainer };\n"]}